{"ast":null,"code":"'use strict';\n/**\n * @module route/visitors/create_visitor\n */\n\nvar nodeTypes = Object.keys(require('../nodes'));\n/**\n * Helper for creating visitors. Take an object of node name to handler\n * mappings, returns an object with a \"visit\" method that can be called\n * @param  {Object.<string,function(node,context)>} handlers A mapping of node\n * type to visitor functions\n * @return {{visit: function(node,context)}}  A visitor object with a \"visit\"\n * method that can be called on a node with a context\n */\n\nfunction createVisitor(handlers) {\n  nodeTypes.forEach(function (nodeType) {\n    if (typeof handlers[nodeType] === 'undefined') {\n      throw new Error('No handler defined for ' + nodeType.displayName);\n    }\n  });\n  return {\n    /**\n     * Call the given handler for this node type\n     * @param  {Object} node    the AST node\n     * @param  {Object} context context to pass through to handlers\n     * @return {Object}\n     */\n    visit: function (node, context) {\n      return this.handlers[node.displayName].call(this, node, context);\n    },\n    handlers: handlers\n  };\n}\n\nmodule.exports = createVisitor;","map":null,"metadata":{},"sourceType":"script"}