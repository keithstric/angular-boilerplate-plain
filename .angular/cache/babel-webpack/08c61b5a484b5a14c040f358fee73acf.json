{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport * as tinycolor from 'tinycolor2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@core/services/auth/auth.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\n\nfunction UserAvatarComponent_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.user == null ? null : ctx_r0.user.avatar, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r0.initials || \"\");\n  }\n}\n\nfunction UserAvatarComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.initials, \" \");\n  }\n}\n\nfunction UserAvatarComponent_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"i\", 6);\n    i0.ɵɵtext(1, \"perm_identity\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"background-color\": a0,\n    \"color\": a1\n  };\n};\n/**\n * A user avatar component. Use the following classes to control the size in pixels:\n * small (32 x 32), medium (48 x 48), large (64 x 64), huge (120 x 120)\n * @class {UserAvatarComponent}\n *\n * @example\n *\n * <app-user-avatar [user]=\"user\" class=\"small\"></app-user-avatar>\n */\n\n\nexport let UserAvatarComponent = /*#__PURE__*/(() => {\n  class UserAvatarComponent {\n    constructor(_auth, store) {\n      this._auth = _auth;\n      this.store = store;\n      this.subscriptions = new Subscription();\n      this.backgroundColor = 'transparent';\n      this.contrastingColor = 'white';\n      this.avatarClicked = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.subscriptions.add(this.store.select(store => store.user).subscribe(user => {\n        this.user = user.data;\n\n        if (this.user) {\n          this.initials = this._auth.getUserInitials();\n          this.backgroundColor = this.getBackgroundColor();\n          this.contrastingColor = this.getContrastingColor(this.backgroundColor);\n        } else {\n          this.backgroundColor = 'transparent';\n          this.contrastingColor = 'white';\n        }\n      }));\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n    /**\n     * emit the avatarClicked event\n     * @param evt\n     * @listens click#avatar-container\n     */\n\n\n    avatarClick(evt) {\n      evt.stopPropagation();\n      this.avatarClicked.emit(evt);\n    }\n    /**\n     * Determine a background color for the avatar based on the email address\n     * @returns {string}\n     */\n\n\n    getBackgroundColor() {\n      let color = 'transparent';\n\n      if (this.user) {\n        let hash = 0;\n        const {\n          email\n        } = this.user;\n\n        for (let i = 0; i < email.length; i++) {\n          hash = email.charCodeAt(i) + ((hash << 5) - hash);\n        }\n\n        color = '#';\n\n        for (let j = 0; j < 3; j++) {\n          const value = hash >> j * 8 & 0xFF;\n          const valueStr = value.toString(16);\n          const hexColor = ('00' + valueStr).substr(-2);\n          color += hexColor;\n        }\n      }\n\n      return color;\n    }\n    /**\n     * Get a text color based on the background color\n     * @returns {string}\n     */\n\n\n    getContrastingColor(color) {\n      const tColor = tinycolor(color);\n      return tColor.isDark() ? 'white' : 'black';\n    }\n\n  }\n\n  UserAvatarComponent.ɵfac = function UserAvatarComponent_Factory(t) {\n    return new (t || UserAvatarComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Store));\n  };\n\n  UserAvatarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserAvatarComponent,\n    selectors: [[\"app-user-avatar\"]],\n    outputs: {\n      avatarClicked: \"avatarClicked\"\n    },\n    decls: 4,\n    vars: 7,\n    consts: [[1, \"avatar-container\", 3, \"ngStyle\", \"click\"], [\"class\", \"avatar\", 3, \"src\", \"alt\", 4, \"ngIf\"], [\"class\", \"initials\", 4, \"ngIf\"], [\"class\", \"material-icons\", 4, \"ngIf\"], [1, \"avatar\", 3, \"src\", \"alt\"], [1, \"initials\"], [1, \"material-icons\"]],\n    template: function UserAvatarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"click\", function UserAvatarComponent_Template_div_click_0_listener($event) {\n          return ctx.avatarClick($event);\n        });\n        i0.ɵɵtemplate(1, UserAvatarComponent_img_1_Template, 1, 2, \"img\", 1);\n        i0.ɵɵtemplate(2, UserAvatarComponent_span_2_Template, 2, 1, \"span\", 2);\n        i0.ɵɵtemplate(3, UserAvatarComponent_i_3_Template, 2, 0, \"i\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(4, _c0, ctx.backgroundColor, ctx.contrastingColor));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.user && ctx.user.avatar);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.user && ctx.initials && !ctx.user.avatar);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.user);\n      }\n    },\n    directives: [i3.NgStyle, i3.NgIf],\n    styles: [\"@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}@-webkit-keyframes fadeOut{0%{opacity:1}to{opacity:0}}@keyframes fadeOut{0%{opacity:1}to{opacity:0}}@-webkit-keyframes animation-slide-out-up{0%{transform:translate(0)}to{transform:translateY(-100%)}}@keyframes animation-slide-out-up{0%{transform:translate(0)}to{transform:translateY(-100%)}}@-webkit-keyframes animation-slide-out-down{0%{transform:translate(0)}to{transform:translateY(100%)}}@keyframes animation-slide-out-down{0%{transform:translate(0)}to{transform:translateY(100%)}}@-webkit-keyframes animation-slide-out-left{0%{transform:translate(0)}to{transform:translate(-100%)}}@keyframes animation-slide-out-left{0%{transform:translate(0)}to{transform:translate(-100%)}}@-webkit-keyframes animation-slide-out-right{0%{transform:translate(0)}to{transform:translate(100%)}}@keyframes animation-slide-out-right{0%{transform:translate(0)}to{transform:translate(100%)}}@-webkit-keyframes animation-slide-in-up{0%{transform:translateY(100%)}to{transform:translate(0)}}@keyframes animation-slide-in-up{0%{transform:translateY(100%)}to{transform:translate(0)}}@-webkit-keyframes animation-slide-in-down{0%{transform:translateY(-100%)}to{transform:translate(0)}}@keyframes animation-slide-in-down{0%{transform:translateY(-100%)}to{transform:translate(0)}}@-webkit-keyframes animation-slide-in-left{0%{transform:translate(-100%)}to{transform:translate(0)}}@keyframes animation-slide-in-left{0%{transform:translate(-100%)}to{transform:translate(0)}}@-webkit-keyframes animation-slide-in-right{0%{transform:translate(100%)}to{transform:translate(0)}}@keyframes animation-slide-in-right{0%{transform:translate(100%)}to{transform:translate(0)}}[_nghost-%COMP%]{padding:0}.small[_nghost-%COMP%]   .avatar-container[_ngcontent-%COMP%]{height:32px;width:32px}.small[_nghost-%COMP%]   .avatar-container[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%]{font-size:24px}.small[_nghost-%COMP%]   .avatar-container[_ngcontent-%COMP%]   .initials[_ngcontent-%COMP%]{font-size:18px}.medium[_nghost-%COMP%]   .avatar-container[_ngcontent-%COMP%]{height:48px;width:48px}.medium[_nghost-%COMP%]   .avatar-container[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%]{font-size:48px}.medium[_nghost-%COMP%]   .avatar-container[_ngcontent-%COMP%]   .initials[_ngcontent-%COMP%]{font-size:24px}.large[_nghost-%COMP%]   .avatar-container[_ngcontent-%COMP%]{height:64px;width:64px}.large[_nghost-%COMP%]   .avatar-container[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%]{font-size:64px}.large[_nghost-%COMP%]   .avatar-container[_ngcontent-%COMP%]   .initials[_ngcontent-%COMP%]{font-size:32px}.huge[_nghost-%COMP%]   .avatar-container[_ngcontent-%COMP%]{height:120px;width:120px}.huge[_nghost-%COMP%]   .avatar-container[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%]{font-size:120px}.huge[_nghost-%COMP%]   .avatar-container[_ngcontent-%COMP%]   .initials[_ngcontent-%COMP%]{font-size:60px}[_nghost-%COMP%]:hover{cursor:pointer}.avatar-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;border-radius:50%}.avatar-container[_ngcontent-%COMP%]   .avatar[_ngcontent-%COMP%]{margin:0;padding:0;height:100%;width:100%;border-radius:50%}.avatar-container[_ngcontent-%COMP%]   .initials[_ngcontent-%COMP%]{padding:7px}\"]\n  });\n  return UserAvatarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}