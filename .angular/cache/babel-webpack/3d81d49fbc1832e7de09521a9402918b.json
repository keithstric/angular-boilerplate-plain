{"ast":null,"code":"/**\n * Abstract transport class that all Logger Transports should extend\n */\nexport class AbstractTransport {\n  constructor(level) {\n    this.level = level;\n  }\n  /**\n   * The name of this transport\n   */\n\n\n  get name() {\n    return this.constructor.name;\n  }\n  /**\n   * This should be a custom formatter for the log message\n   * @param logEntry\n   */\n\n\n  formatMessage(logEntry) {}\n  /**\n   * Called from LoggerService to ensure that shouldNotifyUser, shouldPersist and\n   * logWithDate are properly set on the logEntry\n   * @param {LogEntry} logEntry\n   */\n\n\n  logMessage(logEntry) {\n    logEntry.shouldNotifyUser = this.shouldNotifyUser;\n    logEntry.shouldPersist = this.shouldPersist;\n    logEntry.logWithDate = this.logWithDate;\n    return this.log(logEntry);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}