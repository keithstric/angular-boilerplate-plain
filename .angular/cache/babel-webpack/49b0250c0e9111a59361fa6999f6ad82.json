{"ast":null,"code":"export class LogEntry {\n  constructor(level, message, params) {\n    this.level = level;\n    this.message = message;\n    this.params = params;\n    /**\n     * The date this entry was created\n     */\n\n    this.entryDate = new Date().toISOString();\n    /**\n     * Set to true to include the date in the log output\n     * @private\n     */\n\n    this._logWithDate = true;\n    /**\n     * Set to true to persist to a database. Only works if the {@link AbstractTransport}\n     * supports it\n     * @private\n     */\n\n    this._shouldPersist = false;\n    /**\n     * Set to true to display a toast message to notify the user\n     * @private\n     */\n\n    this._shouldNotifyUser = false;\n  }\n\n  get logWithDate() {\n    return this._logWithDate;\n  }\n\n  set logWithDate(logWithDate) {\n    this._logWithDate = logWithDate;\n  }\n\n  get shouldPersist() {\n    return this._shouldPersist;\n  }\n\n  set shouldPersist(shouldPersist) {\n    this._shouldPersist = shouldPersist;\n  }\n\n  get shouldNotifyUser() {\n    return this._shouldNotifyUser;\n  }\n\n  set shouldNotifyUser(shouldNotifyUser) {\n    this._shouldNotifyUser = shouldNotifyUser;\n  }\n\n  get user() {\n    return this._user;\n  }\n\n  set user(user) {\n    this._user = user;\n  }\n  /**\n   * Convert this log entry to JSON\n   */\n\n\n  toJson() {\n    return JSON.parse(JSON.stringify(this));\n  }\n  /**\n   * Convert this log entry to a JSON string\n   */\n\n\n  toString() {\n    return JSON.stringify(this);\n  }\n  /**\n   * Convert this to a formatted JSON string\n   */\n\n\n  toFormattedString() {\n    return JSON.stringify(this, null, 2);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}