{"ast":null,"code":"import { User } from '@core/models/user.model';\n/**\n * Http request methods\n */\n\nexport var ApiMethod = /*#__PURE__*/(() => {\n  (function (ApiMethod) {\n    ApiMethod[\"GET\"] = \"GET\";\n    ApiMethod[\"POST\"] = \"POST\";\n    ApiMethod[\"PUT\"] = \"PUT\";\n    ApiMethod[\"DELETE\"] = \"DELETE\";\n    ApiMethod[\"PATCH\"] = \"PATCH\";\n  })(ApiMethod || (ApiMethod = {}));\n\n  return ApiMethod;\n})();\n\n/**\n * Not sure if this is really a good idea. There could be a lot of endpoints and this\n * doesn't take into account endpoint patterns ('/api/something/:id')\n *\n * But, it could be just high level endpoints I guess.\n */\nexport var ApiEndpoints = /*#__PURE__*/(() => {\n  (function (ApiEndpoints) {\n    ApiEndpoints[\"LOGIN\"] = \"/api/auth/login\";\n    ApiEndpoints[\"REGISTER\"] = \"/api/auth/register\";\n    ApiEndpoints[\"LOGOUT\"] = \"/api/auth/logout\";\n    ApiEndpoints[\"FORGOT\"] = \"/api/auth/forgot\";\n    ApiEndpoints[\"CHANGE_PW\"] = \"/api/auth/changepw\";\n  })(ApiEndpoints || (ApiEndpoints = {}));\n\n  return ApiEndpoints;\n})();\n\n/**\n * This maps top level api request routes to a class. For example, if a request is\n * made to \"/api/person\" which returns an array of people, we want each item in that\n * array to be an instance of User. Like wise a request to \"/api/person/<id>\" returns\n * a single person, we also want that to be an instance of User.\n */\nexport const ApiRouteToClass = {\n  '/api/auth': User,\n  '/api/person': User\n};\nexport const CachableRoutePatterns = {\n  '/api/person/:id': true,\n  'https://pokeapi.co/api/v2/pokemon/:id/': true,\n  'https://pokeapi.co/api/v2/pokemon': false\n};","map":null,"metadata":{},"sourceType":"module"}