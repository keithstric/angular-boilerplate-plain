{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { LoginUserAction } from '@core/root-store/user/user.action';\nimport { Subscription } from 'rxjs';\nimport { PROJECT_NAME } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@core/services/error-handler/error-handler.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@core/services/notification/notification.service\";\nimport * as i5 from \"@ngrx/store\";\nimport * as i6 from \"../../../../shared/components/card/card.component\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(_formBuilder, _error, _router, _notify, store) {\n      this._formBuilder = _formBuilder;\n      this._error = _error;\n      this._router = _router;\n      this._notify = _notify;\n      this.store = store;\n      this.email = new FormControl('', [Validators.required, Validators.email]);\n      this.password = new FormControl('', [Validators.required]);\n      this.projectName = PROJECT_NAME;\n      this.subscriptions = new Subscription();\n    }\n\n    ngOnInit() {\n      // Subscribe to the error service to catch errors\n      this.subscriptions.add(this._error.errorEvent.subscribe(err => {\n        this.errorMsg = err.message;\n      }));\n      this.store.select(store => store.user).subscribe(state => {\n        if (state && state.data) {\n          this._router.navigateByUrl('/');\n        }\n      });\n      this.buildFormGroup();\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n    /**\n     * Build the formGroup\n     */\n\n\n    buildFormGroup() {\n      this.loginData = this._formBuilder.group({\n        email: this.email,\n        password: this.password\n      });\n    }\n    /**\n     * Gets the validation message to show for each field\n     * @param {string} field\n     */\n\n\n    getFieldErrorMessage(field) {\n      if (field === 'email') {\n        if (this.email.hasError('required')) {\n          return 'You must provide an email address';\n        } else if (this.email.hasError('email')) {\n          return 'Please enter a valid email address (yourname@knowhere.com)';\n        }\n      } else if (field === 'password') {\n        if (this.password.hasError('required')) {\n          return 'You must provide a password';\n        }\n      }\n\n      return '';\n    }\n    /**\n     * Perform the authentication\n     */\n\n\n    loginClick() {\n      this.store.dispatch(new LoginUserAction(this.loginData.getRawValue())); // this.subscriptions.add(this._auth.login(this.loginData.getRawValue())\n      // \t.subscribe((user: User) => {\n      // \t\tthis._ui.notifyUserShowSnackbar(`Welcome to ${PROJECT_NAME}!`);\n      // \t\tthis._router.navigateByUrl('/auth/user');\n      // \t}));\n    }\n    /**\n     * On keypress if the key is the enter key, perform the login\n     * @param evt {KeyboardEvent}\n     */\n\n\n    onKeypress(evt) {\n      if (evt.key === 'Enter' && !this.loginData.invalid) {\n        this.loginClick();\n      }\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AppErrorHandler), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.NotificationService), i0.ɵɵdirectiveInject(i5.Store));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 28,\n    vars: 5,\n    consts: [[1, \"page-container\", \"flex\", \"flex-content-center\"], [\"header\", \"\", 1, \"header\", \"flex-column\"], [1, \"title\"], [1, \"card-subtitle\"], [\"content\", \"\", 1, \"content\"], [1, \"loginForm\", \"flex-column\", 3, \"formGroup\"], [\"loginForm\", \"\"], [1, \"form-field\", \"flex-column\"], [\"for\", \"emailInput\", 1, \"label\"], [\"id\", \"emailInput\", \"placeholder\", \"youremail@knowhere.com\", \"type\", \"email\", \"name\", \"email\", 1, \"input\", 3, \"formControl\", \"keypress\"], [\"for\", \"passwordInput\", 1, \"label\"], [\"id\", \"passwordInput\", \"placeholder\", \"Password\", \"type\", \"password\", \"name\", \"password\", 1, \"input\", 3, \"formControl\", \"keypress\"], [\"actions\", \"\", 1, \"actions\", \"flex-row\", \"flex-content-end\"], [3, \"click\"], [\"footer\", \"\", 1, \"footer\", \"flex-row\", \"flex-content-center\"], [\"routerLink\", \"/auth/register\", \"title\", \"Register\"], [\"routerLink\", \"/auth/forgot\", \"title\", \"Forgotten Password\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"app-card\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"h2\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h3\", 3);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"form\", 5, 6);\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Email Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 9);\n        i0.ɵɵlistener(\"keypress\", function LoginComponent_Template_input_keypress_13_listener($event) {\n          return ctx.onKeypress($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 7);\n        i0.ɵɵelementStart(15, \"label\", 10);\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 11);\n        i0.ɵɵlistener(\"keypress\", function LoginComponent_Template_input_keypress_17_listener($event) {\n          return ctx.onKeypress($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 12);\n        i0.ɵɵelementStart(19, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(9);\n\n          return _r0.reset();\n        });\n        i0.ɵɵtext(20, \"Reset\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_21_listener() {\n          return ctx.loginClick();\n        });\n        i0.ɵɵtext(22, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 14);\n        i0.ɵɵelementStart(24, \"a\", 15);\n        i0.ɵɵtext(25, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"a\", 16);\n        i0.ɵɵtext(27, \"Forgotten Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.projectName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.errorMsg);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginData);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.password);\n      }\n    },\n    directives: [i6.CardComponent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i3.RouterLinkWithHref],\n    styles: [\".page-container[_ngcontent-%COMP%]   app-card[_ngcontent-%COMP%]{width:400px}.page-container[_ngcontent-%COMP%]   app-card[_ngcontent-%COMP%]  .header{text-align:center}.page-container[_ngcontent-%COMP%]   app-card[_ngcontent-%COMP%]  .header h1, .page-container[_ngcontent-%COMP%]   app-card[_ngcontent-%COMP%]  .header h2, .page-container[_ngcontent-%COMP%]   app-card[_ngcontent-%COMP%]  .header h3, .page-container[_ngcontent-%COMP%]   app-card[_ngcontent-%COMP%]  .header h4, .page-container[_ngcontent-%COMP%]   app-card[_ngcontent-%COMP%]  .header h5, .page-container[_ngcontent-%COMP%]   app-card[_ngcontent-%COMP%]  .header h6{margin:0 0 10px}.page-container[_ngcontent-%COMP%]   app-card[_ngcontent-%COMP%]  .header .card-subtitle{opacity:.7;color:#fff3cd}.page-container[_ngcontent-%COMP%]   app-card[_ngcontent-%COMP%]  .footer a:first-child{margin-right:10px}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}