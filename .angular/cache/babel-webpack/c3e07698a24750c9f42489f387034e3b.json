{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from '@core/core.module';\nimport { ServiceLocator } from '@core/services/service-locator';\nimport { LayoutModule } from '@layout/layout.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { SharedModule } from '@shared/shared.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\n/**\n * The AppModule\n */\n\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    /**\n     * Update the ServiceLocator to provide the injector to static methods, properties and pojo items\n     * @param _injector\n     */\n    constructor(_injector) {\n      this._injector = _injector;\n      const injectorListener = ServiceLocator.observableInjector.subscribe(injector => {\n        ServiceLocator.injector = injector;\n\n        if (ServiceLocator.injector) {\n          injectorListener.unsubscribe();\n        }\n      });\n      ServiceLocator.observableInjector.next(_injector);\n    }\n\n  }\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)(i0.ɵɵinject(i0.Injector));\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[AppRoutingModule, BrowserAnimationsModule, BrowserModule, CoreModule, LayoutModule, ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production\n    }), SharedModule]]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module"}