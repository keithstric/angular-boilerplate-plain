{"ast":null,"code":"import { LocalStorageTypes } from '@core/interfaces/local-storage.interface';\nimport { UserActionTypes } from '@core/root-store/user/user.action';\nimport { LocalStorageService } from '@core/services/local-storage/local-storage.service';\nexport const initialUserState = {\n  data: null,\n  loading: false,\n  error: undefined\n};\nexport function UserReducer(state = initialUserState, action) {\n  switch (action.type) {\n    case UserActionTypes.LOGIN_USER_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        data: action.payload,\n        loading: false,\n        error: undefined\n      });\n\n    case UserActionTypes.LOGIN_USER_FAILURE:\n      return Object.assign(Object.assign({}, state), {\n        data: null,\n        loading: false,\n        error: action.payload\n      });\n\n    case UserActionTypes.LOGOUT_USER_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        data: null,\n        loading: false,\n        error: undefined\n      });\n\n    case UserActionTypes.LOGOUT_USER_FAILURE:\n      return Object.assign(Object.assign({}, state), {\n        data: null,\n        loading: false,\n        error: action.payload\n      });\n\n    case UserActionTypes.REGISTER_USER_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        data: action.payload,\n        loading: false,\n        error: undefined\n      });\n\n    case UserActionTypes.REGISTER_USER_FAILURE:\n      return Object.assign(Object.assign({}, state), {\n        data: null,\n        loading: false,\n        error: action.payload\n      });\n\n    case UserActionTypes.CHANGE_PASSWORD_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        data: action.payload,\n        loading: false,\n        error: undefined\n      });\n\n    case UserActionTypes.CHANGE_PASSWORD_FAILURE:\n      return Object.assign(Object.assign({}, state), {\n        error: action.payload\n      });\n  }\n\n  return state;\n}\n/*\n* User selectors\n*/\n\nexport const getUser = state => state.data;\nexport const getUserLoaded = state => state.loaded;\nexport const getUserLoading = state => state.loading;\nexport const getUserFullName = state => state.data.fullName;\nexport const getUserLastName = state => state.data.last_name;\nexport const getUserFirstName = state => state.data.first_name;\nexport const getUserEmail = state => state.data.email;\nexport const getUserAvatar = state => state.data.avatar;\n/**\n * Get user from local storage and update the state\n * @param reducer\n */\n\nexport function UserFromStorageMetaReducer(reducer) {\n  return (state, action) => {\n    let newState = state ? Object.assign({}, state) : state;\n\n    if (state && state.user) {\n      const user = LocalStorageService.getItem(LocalStorageTypes.SESSION, 'user');\n\n      if (user) {\n        const userState = {\n          data: user,\n          loading: false,\n          error: undefined\n        };\n        newState = Object.assign(Object.assign({}, newState), {\n          user: userState\n        });\n      }\n    }\n\n    return reducer(newState, action);\n  };\n}","map":null,"metadata":{},"sourceType":"module"}