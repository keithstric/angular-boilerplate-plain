{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\n/**\n * This class is for locating a Service for use in a plain old class\n * for example a Model. This allows services to be used anywhere.\n *\n * It also provides a static observable\n *\n * @example\n * // In plain old class\n * export class Foo {\n *   private _http: HttpService = ServiceLocator.injector.get(HttpService);\n *\n *   amazingMethod() {\n *     this._http....\n *   }\n * }\n *\n * @example\n * // Must be instantiated in the app module\n * export class AppModule {\n *   constructor(private _injector: Injector) {\n *     ServiceLocator.injector = _injector;\n *   }\n * }\n */\n\nexport class ServiceLocator {}\nServiceLocator.observableInjector = new BehaviorSubject(ServiceLocator.injector);","map":null,"metadata":{},"sourceType":"module"}